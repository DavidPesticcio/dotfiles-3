snippet bind "binding resource"
@group($1) @binding($2)$0
endsnippet

snippet v2 "vec2" i
vec2<f32>
endsnippet

snippet v3 "vec3" i
vec3<f32>
endsnippet

snippet v4 "vec4" i
vec4<f32>
endsnippet

snippet u2 "vec2u" i
vec2<u32>
endsnippet

snippet u3 "vec3u" i
vec3<u32>
endsnippet

snippet u4 "vec4u" i
vec4<u32>
endsnippet

snippet i2 "vec2i" i
vec2<i32>
endsnippet

snippet i3 "vec3i" i
vec3<i32>
endsnippet

snippet i4 "vec4i" i
vec4<i32>
endsnippet

snippet template "quick template for a generic shader" b
struct VertexOutput {
    @builtin(position) clip_position: vec4<f32>,
}

@vertex
fn vs_main(
    @location(0) position: vec3<f32>,
) -> VertexOutput {
    var out: VertexOutput;

    return out;
}

@fragment
fn fs_main(
    in: VertexOutput
) -> @location(0) vec4<f32> {
    return vec4<f32>(0., 0., 0., 0.);
}
endsnippet

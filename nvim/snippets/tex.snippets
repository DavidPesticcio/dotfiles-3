global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet bel "begin{} / end{} + label" bA
\begin{$1}\label{$2}
	$0
\end{$1}
endsnippet

snippet mb "math block" bA
\[
	$0
\]
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet sec "section*" bA
\section*{$1}
$0
endsnippet

snippet sub "subsection*" bA
\subsection*{$1}
$0
endsnippet

context "math()"
snippet // "fraction" iA
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet "d([a-zA-Z])d([a-zA-Z])" "derivative dy/dx" r
\frac{d`!p snip.rv=match.group(1)`}{d`!p snip.rv=match.group(2)`}
endsnippet

context "math()"
snippet "dd([a-zA-Z])dd([a-zA-Z])" "second derivative d^2y/dx^2" rA
\frac{d^2 `!p snip.rv=match.group(1)`}{d `!p snip.rv=match.group(2)`^2}
endsnippet

context "math()"
snippet "p([a-zA-Z])p([a-zA-Z])" "partial derivative py/px" r
\frac{\partial `!p snip.rv=match.group(1)`}{\partial `!p snip.rv=match.group(2)`}
endsnippet

context "math()"
snippet "pp([a-zA-Z])pp([a-zA-Z])" "second partial perivative p^2y/px^2" rA
\frac{\partial^2 `!p snip.rv=match.group(1)`}{\partial `!p snip.rv=match.group(2)`^2}
endsnippet

context "math()"
snippet "pp([a-zA-Z])p([a-zA-Z])p([a-zA-Z])" "second partial perivative p^2y/pxpz" rA
\frac{\partial^2 `!p snip.rv=match.group(1)`}{\partial `!p snip.rv=match.group(2)` \partial `!p snip.rv=match.group(3)`}
endsnippet

snippet "([a-zA-Z])bb" "postfix mathbb" riA
\mathbb{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])bf" "postfix mathbf" riA
\mathbf{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])bar" "postfix overline" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

snippet "([a-zA-Z])hat" "postfix hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet
